---
import Layout from "@rst/layouts/Layout.astro";
import { Button } from "@common/components/Button.tsx";
import { Box } from "@common/components/Box.tsx";
import { getProgramGroupedByStarthour } from "@rst/components/anmeldung/data.ts";
import EventList from "@rst/components/anmeldung/EventList.astro";
import { MealBreak } from "@rst/components/anmeldung/MealBreak.tsx";

export const frontmatter = {
  navigation: {
    group: "main",
    label: "Programm 2024",
    order: 2,
  },
};

const program = await getProgramGroupedByStarthour();
const saturday = Object.entries(program.SATURDAY);
const sunday = Object.entries(program.SUNDAY);
---

<Layout metaTitle="Programm 2024">
  <h1 id="programm-2024">
    <a href="#programm-2024" class="header-anchor">Programm 2024</a>
  </h1>

  <a href="#Samstag" style="border: none;"><Button label="Samstag" /></a>
  <a href="#Sonntag" style="border: none;"><Button label="Sonntag" /></a>

  <h2 id="Samstag">
    <a href="#Samstag" class="header-anchor">Samstag, 24. August 2024</a>
  </h2>
  {
    saturday
      .filter(([hour]) => {
        return Number(hour) < 13;
      })
      .map(([hour, entries]) => (
        <>
          <h3 id={`Samstag-${hour}`}>
            <a href={`#Samstag-${hour}`} class="header-anchor">
              Start {hour} Uhr
            </a>
          </h3>
          <EventList hour={hour} entries={entries} />
        </>
      ))
  }

  <div style="margin-block: 2.5rem;">
    <MealBreak time={{ from: 13, to: 14 }} type="LUNCH" />
  </div>

  {
    saturday
      .filter(([hour]) => {
        return Number(hour) > 13 && Number(hour) < 18;
      })
      .map(([hour, entries]) => (
        <>
          <h3 id={`Samstag-${hour}`}>
            <a href={`#Samstag-${hour}`} class="header-anchor">
              Start {hour} Uhr
            </a>
          </h3>
          <EventList hour={hour} entries={entries} />
        </>
      ))
  }

  <div style="margin-block: 2.5rem;">
    <MealBreak time={{ from: 18, to: 19 }} type="DINNER" />
  </div>

  {
    saturday
      .filter(([hour]) => {
        return Number(hour) > 18;
      })
      .map(([hour, entries]) => (
        <>
          <h3 id={`Samstag-${hour}`}>
            <a href={`#Samstag-${hour}`} class="header-anchor">
              Start {hour} Uhr
            </a>
          </h3>
          <EventList hour={hour} entries={entries} />
        </>
      ))
  }
  <a href="#top" style="border: none;"><Button label="nach oben" /></a>
  <a href="/anmeldung" style="border: none;"
    ><Button label="jetzt Anmelden" kind="success" /></a
  >

  <h2 id="Sonntag">
    <a href="#Sonntag" class="header-anchor">Sonntag, 25. August 2024</a>
  </h2>

  {
    sunday
      .filter(([hour]) => {
        return Number(hour) < 13;
      })
      .map(([hour, entries]) => (
        <>
          <h3 id={`Sonntag-${hour}`}>
            <a href={`#Sonntag-${hour}`} class="header-anchor">
              Start {hour} Uhr
            </a>
          </h3>
          <EventList hour={hour} entries={entries} />
        </>
      ))
  }

  <div style="margin-block: 2.5rem;">
    <MealBreak time={{ from: 13, to: 14 }} type="LUNCH" />
  </div>

  {
    sunday
      .filter(([hour]) => {
        return Number(hour) > 13;
      })
      .map(([hour, entries]) => (
        <>
          <h3 id={`Sonntag-${hour}`}>
            <a href={`#Sonntag-${hour}`} class="header-anchor">
              Start {hour} Uhr
            </a>
          </h3>
          <EventList hour={hour} entries={entries} />
        </>
      ))
  }

  <a href="#top" style="border: none;"><Button label="nach oben" /></a>
  <a href="/anmeldung" style="border: none;"
    ><Button label="jetzt Anmelden" kind="success" /></a
  >
</Layout>
